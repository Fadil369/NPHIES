# Server Configuration
server.port=8080
server.servlet.context-path=/
management.server.port=8081

# Application Configuration
spring.application.name=claims-service

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/nphies_claims
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=claims-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.health.kafka.enabled=true

# Security Configuration (placeholder)
spring.security.user.name=admin
spring.security.user.password=admin123

# Service Integration
nphies.services.eligibility.url=http://localhost:8090
nphies.services.terminology.url=http://localhost:8091

# Logging Configuration
logging.level.com.nphies.claims=INFO
logging.level.org.springframework.kafka=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n